"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),g=o,f=u["".concat(c,".").concat(g)]||u[g]||d[g]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={title:"Getting started",sidebar_label:"Getting started"},i="Getting started",l={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"GraphQL Client is a simple GraphQL client for React applications. It's focused on giving a good, typesafe experience when working on your codebase.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/graphql-client/getting-started",draft:!1,editUrl:"https://github.com/swan-io/boxed/edit/main/docs/docs/getting-started.md",tags:[],version:"current",frontMatter:{title:"Getting started",sidebar_label:"Getting started"},sidebar:"docs",next:{title:"useQuery",permalink:"/graphql-client/use-query"}},c={},s=[{value:"1. Install",id:"1-install",level:2},{value:"2. Create your client",id:"2-create-your-client",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting started"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"GraphQL Client")," is a simple GraphQL client for React applications. It's focused on giving a good, typesafe experience when working on your codebase."),(0,o.kt)("h2",{id:"1-install"},"1. Install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ yarn add @swan-io/graphql-client\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ npm install @swan-io/graphql-client\n")),(0,o.kt)("h2",{id:"2-create-your-client"},"2. Create your client"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/index.tsx"',title:'"src/index.tsx"'},'import { Client, ClientContext } from "@swan-io/graphql-client";\nimport { App } from "./App";\nimport { createRoot } from "react-dom/client";\n\n// highlight-start\nconst client = new Client({\n  url: "/api",\n  headers: {\n    "Content-Type": "application/json",\n  },\n});\n// highlight-end\n\nexport const Root = () => {\n  return (\n    // highlight-start\n    <ClientContext.Provider value={client}>\n      // highlight-end\n      <App />\n      // highlight-start\n    </ClientContext.Provider>\n    // highlight-end\n  );\n};\n\nconst root = document.querySelector("#app");\n\nif (root != null) {\n  createRoot(root).render(<Root />);\n}\n')),(0,o.kt)("p",null,"And you're ready to go!"))}d.isMDXComponent=!0}}]);