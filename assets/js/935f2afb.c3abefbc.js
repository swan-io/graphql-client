"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Getting started","href":"/graphql-client/getting-started","docId":"getting-started","unlisted":false},{"type":"category","label":"API","collapsed":false,"collapsible":false,"items":[{"type":"link","label":"useQuery","href":"/graphql-client/use-query","docId":"use-query","unlisted":false},{"type":"link","label":"useDeferredQuery","href":"/graphql-client/use-deferred-query","docId":"use-deferred-query","unlisted":false},{"type":"link","label":"useMutation","href":"/graphql-client/use-mutation","docId":"use-mutation","unlisted":false},{"type":"link","label":"Client","href":"/graphql-client/client","docId":"client","unlisted":false},{"type":"link","label":"Pagination","href":"/graphql-client/pagination","docId":"pagination","unlisted":false},{"type":"link","label":"Client Errors","href":"/graphql-client/client-errors","docId":"client-errors","unlisted":false}]},{"type":"link","label":"Caching","href":"/graphql-client/caching","docId":"caching","unlisted":false}]},"docs":{"caching":{"id":"caching","title":"Caching","description":"Cache rules","sidebar":"docs"},"client":{"id":"client","title":"Client","description":"Configuration","sidebar":"docs"},"client-errors":{"id":"client-errors","title":"Client Errors","description":"Errors","sidebar":"docs"},"getting-started":{"id":"getting-started","title":"Getting started","description":"GraphQL Client is a simple GraphQL client for React applications. It\'s focused on giving a good, typesafe experience when working on your codebase.","sidebar":"docs"},"pagination":{"id":"pagination","title":"Pagination","description":"As far as the client is concerned, a paginated query is a different query (as it has different variables). This is why we use React hooks to perform the pagination aggregate using some metadata added when the query is received.","sidebar":"docs"},"use-deferred-query":{"id":"use-deferred-query","title":"useDeferredQuery","description":"useDeferredQuery(query, config?)","sidebar":"docs"},"use-mutation":{"id":"use-mutation","title":"useMutation","description":"useMutation(mutation, config?)","sidebar":"docs"},"use-query":{"id":"use-query","title":"useQuery","description":"useQuery(query, variables, config?)","sidebar":"docs"}}}')}}]);